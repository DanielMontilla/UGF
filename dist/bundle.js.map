{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://ultitled-graphics-framework/./src/Entities/Entity.ts","webpack://ultitled-graphics-framework/./src/Entities/Rectangle.ts","webpack://ultitled-graphics-framework/./src/Entities/Sprite.ts","webpack://ultitled-graphics-framework/./src/Input/InputHandler.ts","webpack://ultitled-graphics-framework/./src/Input/Key.ts","webpack://ultitled-graphics-framework/./src/Math/Vec2.ts","webpack://ultitled-graphics-framework/./src/Renderer/Camera.ts","webpack://ultitled-graphics-framework/./src/Renderer/Pipelines/Pipeline.ts","webpack://ultitled-graphics-framework/./src/Renderer/Pipelines/Rectangle.ts","webpack://ultitled-graphics-framework/./src/Renderer/Pipelines/Sprite.ts","webpack://ultitled-graphics-framework/./src/Renderer/Renderer.ts","webpack://ultitled-graphics-framework/./src/Renderer/Texture.ts","webpack://ultitled-graphics-framework/./src/Shaders/Rectangle.ts","webpack://ultitled-graphics-framework/./src/Shaders/Sprite.ts","webpack://ultitled-graphics-framework/./src/Surface.ts","webpack://ultitled-graphics-framework/./src/main.ts","webpack://ultitled-graphics-framework/./src/util.ts","webpack://ultitled-graphics-framework/./src/webgl-utils.ts","webpack://ultitled-graphics-framework/webpack/bootstrap","webpack://ultitled-graphics-framework/webpack/before-startup","webpack://ultitled-graphics-framework/webpack/startup","webpack://ultitled-graphics-framework/webpack/after-startup"],"sourcesContent":["import Surface from \"../Surface\";\r\n\r\nexport default abstract class Entity {\r\n   \r\n   public readonly surface: Surface;\r\n\r\n   public layer: number;\r\n\r\n   constructor(\r\n      surface: Surface,\r\n   ) {\r\n      this.surface   = surface;\r\n      this.layer     = 0;\r\n   }\r\n}","import Surface from \"../Surface\";\r\nimport { createTexture } from \"../webgl-utils\";\r\nimport Entity from \"./Entity\";\r\n\r\nexport default class Rectangle extends Entity {\r\n\r\n   public x: number;\r\n   public y: number;\r\n   public width: number;\r\n   public height: number;\r\n   public color: rgb;\r\n\r\n   constructor(surface: Surface, x: number, y: number, width: number, height: number, color: rgb) { \r\n      super(surface);\r\n\r\n      this.x         = x;\r\n      this.y         = y;\r\n      this.width     = width;\r\n      this.height    = height;\r\n      this.color     = color;\r\n\r\n      surface.addEntity(this);\r\n   }\r\n\r\n   scale = (num: number) => {\r\n      this.width *= num;\r\n      this.height *= num;\r\n   };\r\n}","import Texture from \"../Renderer/Texture\";\r\nimport Surface from \"../Surface\";\r\nimport { rand } from \"../util\";\r\nimport Entity from \"./Entity\";\r\n\r\nexport default class Sprite extends Entity {\r\n\r\n   public textureID: string = '';\r\n\r\n   public x: number;\r\n   public y: number;\r\n   public width: number;\r\n   public height: number;\r\n\r\n   public readonly texture: Texture;\r\n   public frame: number;\r\n\r\n   constructor(surface: Surface, x: number, y: number, texture: Texture, frame: number = 0) { \r\n      super(surface);\r\n\r\n      this.texture   = texture;\r\n      this.frame     = this.frameExists(frame) ? frame : 0;\r\n\r\n      this.x         = x;\r\n      this.y         = y;\r\n      this.width     = texture.img.width;\r\n      this.height    = texture.img.height;\r\n\r\n      surface.addEntity(this);\r\n   }\r\n\r\n   public scale = (num: number) => {\r\n      this.width *= num;\r\n      this.height *= num;\r\n      return this;\r\n   }\r\n\r\n   public nextFrame = () => {\r\n      if (this.frameExists(this.frame + 1)) {\r\n         this.frame++\r\n      } else {\r\n         this.frame = 0;\r\n      }\r\n   }\r\n\r\n   public randomFrame = () => {\r\n      let original = this.frame;\r\n      while (original == this.frame) {\r\n         this.frame = rand(0, this.texture.frameData.length - 1, true);\r\n      }\r\n   }\r\n\r\n   private frameExists(frame: number) {\r\n      if (frame < 0 || frame > this.texture.frameData.length - 1) return false;\r\n      return true;\r\n   }\r\n}","import Key from \"./Key\";\r\n\r\nexport default class InputHandler {\r\n\r\n   public readonly canvas: HTMLCanvasElement;\r\n\r\n   private keyResgistry: Dictionary < keyCode, Key > = {};\r\n   \r\n   constructor(canvas: HTMLCanvasElement) {\r\n      this.canvas = canvas;\r\n      this.canvas.tabIndex = 0;\r\n      this.canvas.focus();\r\n\r\n      this.canvas.addEventListener('keydown', \r\n         (e: KeyboardEvent) => { this.keyBoardEventCallback( <keyCode> e.key, 'keydown') }\r\n      );\r\n\r\n      this.canvas.addEventListener('keyup', \r\n         (e: KeyboardEvent) => { this.keyBoardEventCallback( <keyCode> e.key, 'keyup') }\r\n      );\r\n   }\r\n\r\n   public addKey = (\r\n      keyCode: keyCode,\r\n      onDownCallback?: () => void,\r\n      onUpCallback?: () => void\r\n   ): Key => {\r\n      let key = new Key(keyCode, onDownCallback, onUpCallback);\r\n      this.keyResgistry[key.code] = key;\r\n      return key;\r\n   }\r\n\r\n   private keyBoardEventCallback = (keyCode: keyCode, event: keyEvent) => {\r\n      let key = this.keyResgistry[keyCode];\r\n\r\n      if (!key) return;\r\n\r\n      switch (event) {\r\n         case 'keydown':\r\n            key.onDown();\r\n            break;\r\n\r\n         case 'keyup':\r\n            key.onUp();\r\n            break;\r\n      }\r\n   }\r\n}","import { emptyFunc } from \"../util\";\r\n\r\nexport default class Key {\r\n\r\n   public readonly code: keyCode;\r\n   public pressed: boolean;\r\n\r\n   public onDownCallback: () => void;\r\n   public onUpCallback: () => void;\r\n   public onDownOnceCallback: () => void;\r\n\r\n   constructor(\r\n      code: keyCode,\r\n      onDownCallback: () => void = emptyFunc,\r\n      onUpCallback: () => void = emptyFunc\r\n      ) {\r\n      this.code               = code;\r\n      this.onDownCallback     = onDownCallback;\r\n      this.onUpCallback       = onUpCallback;\r\n      this.onDownOnceCallback = emptyFunc;\r\n      this.pressed            = false;\r\n   }\r\n\r\n   public onDown() {\r\n      if (!this.pressed) this.onDownOnce();\r\n      this.onDownCallback();\r\n   }\r\n\r\n   public onUp() {\r\n      this.pressed = false;\r\n      this.onUpCallback();\r\n   }\r\n\r\n   private onDownOnce() {\r\n      this.pressed = true;\r\n      this.onDownOnceCallback();\r\n   }\r\n}","export default class Vec2 {\r\n   constructor(\r\n      public x: number = 0,\r\n      public y: number = 0\r\n   ) { }\r\n\r\n   reset = () => {\r\n      this.x = 0;\r\n      this.y = 0;\r\n   }\r\n\r\n   add = (v: Vec2 | [ x: number, y: number ] | { x: number, y: number }) => {\r\n      let x, y;\r\n\r\n      if (v instanceof Array) {\r\n         x = v[0]; y = v[1]\r\n      } else {\r\n         x = v.x; y = v.y\r\n      };\r\n      \r\n      this.x += x;\r\n      this.y += y;\r\n      return this;\r\n   }\r\n\r\n   /* <------------------------------------| FACTORY METHODS |------------------------------------> */\r\n   public static all = (n: number) => {\r\n      return new Vec2(n, n);\r\n   }\r\n}","import Vec2 from \"../Math/Vec2\";\r\nimport Surface from \"../Surface\";\r\n\r\nexport default class Camera {\r\n   constructor(\r\n      public readonly surface: Surface,\r\n      public position: Vec2 = Vec2.all(0),\r\n      public zoom: number = 0,\r\n   ) { }\r\n\r\n   get x() {\r\n      return this.position.x;\r\n   }\r\n\r\n   get y() {\r\n      return this.position.y;\r\n   }\r\n\r\n   public move(x: number, y: number) {\r\n      this.position.add([x, y]);\r\n   }\r\n}","import Renderer from \"../Renderer\";\r\nimport Entity from \"../../Entities/Entity\";\r\nimport { createProgram, createShader } from \"../../webgl-utils\";\r\n\r\nexport default abstract class Pipeline <\r\n   A extends string = string, \r\n   U extends string = string\r\n> {\r\n   public readonly program: WebGLProgram;\r\n   public readonly vertexShader: WebGLShader;\r\n   public readonly fragmentShader: WebGLShader;\r\n\r\n   public readonly renderer: Renderer;\r\n\r\n   protected attributes = < Record<A, attributeInfo> > {};\r\n   protected uniforms   = < Record<U, uniformInfo> > {};\r\n\r\n   public constructor(\r\n      renderer: Renderer,\r\n      vsSource: string,\r\n      fsSource: string,\r\n      attribArr: readonly string[],\r\n      uniformArr: readonly string[]\r\n   ) {\r\n      let gl = renderer.gl;\r\n\r\n      this.renderer        = renderer;\r\n      this.vertexShader    = createShader(gl, 'vertex', vsSource);\r\n      this.fragmentShader  = createShader(gl, 'fragment', fsSource);\r\n      this.program         = createProgram(gl, this.vertexShader, this.fragmentShader);\r\n\r\n      /* |--------------------------< GENERATING ATTRIBUTE DATA >--------------------------| */\r\n      for (const attribID of attribArr) {\r\n\r\n         let location   = gl.getAttribLocation(this.program, attribID);\r\n         let info       = <WebGLActiveInfo> gl.getActiveAttrib(this.program, location)\r\n         let size       = info.size + 1;\r\n         let type       = info.type;\r\n\r\n         this.attributes[attribID as A] = {\r\n            location : location,\r\n            size     : size,\r\n            type     : type\r\n         }\r\n      }\r\n\r\n      /* |--------------------------< GENERATING UNIFORM DATA >--------------------------| */\r\n      for (const [index, uniformID] of uniformArr.entries()) {\r\n\r\n         let location   = <WebGLUniformLocation> gl.getUniformLocation(this.program, uniformID);\r\n         let info       = <WebGLActiveInfo> gl.getActiveUniform(this.program, index);\r\n         let size       = info.size;\r\n         let type       = info.type;\r\n\r\n         this.uniforms[uniformID as U] = {\r\n            location : location,\r\n            size     : size,\r\n            type     : type\r\n         }\r\n      }\r\n   }\r\n\r\n   public abstract flush(e: Entity[]): void;\r\n}","import Pipeline from \"./Pipeline\";\r\nimport Renderer from \"../Renderer\";\r\n\r\nimport {\r\n   vertexShader   as vsSource,\r\n   fragmentShader as fsSource,\r\n   attributes     as attribArr,\r\n   uniforms       as uniforArr\r\n} from '../../Shaders/Rectangle';\r\n\r\nimport Rectangle from \"../../Entities/Rectangle\";\r\n\r\nexport default class RectanglePipeline extends Pipeline <\r\n   typeof attribArr[number],\r\n   typeof uniforArr[number]\r\n> {\r\n\r\n   /* CONSTANTS */\r\n   private static readonly MAX_QUAD          = 2**10; // TODO: Set up flusing system to have an unlimited amount of quads\r\n   private static readonly UNIT_SIZE         = 4;  // sizeof(float) = 4 bytes = sizeof(unit)\r\n   private static readonly UNITS_PER_VERTEX  = 6;  // [ x, y, z, r, g, b ].length = 6\r\n   private static readonly VERTEX_PER_QUAD   = 4;  // A quad has 4 corners aka 4 vertices\r\n   private static readonly INDICES_PER_QUAD  = 6;  // To create a quad we need 2 triangles wich require 3 verticies each, 3 * 2 = 6\r\n\r\n   private static readonly VERTEX_SIZE       = RectanglePipeline.UNITS_PER_VERTEX  * RectanglePipeline.UNIT_SIZE;\r\n   private static readonly UNITS_PER_QUAD    = RectanglePipeline.VERTEX_PER_QUAD   * RectanglePipeline.UNITS_PER_VERTEX;\r\n   private static readonly MAX_INDICES       = RectanglePipeline.INDICES_PER_QUAD  * RectanglePipeline.MAX_QUAD;\r\n   private static readonly MAX_UNIT          = RectanglePipeline.UNITS_PER_QUAD    * RectanglePipeline.MAX_QUAD;\r\n   private static readonly MAX_SIZE          = RectanglePipeline.MAX_UNIT          * RectanglePipeline.UNIT_SIZE;\r\n\r\n   private vao: Float32Array; // Vertex Array Buffer  -> CPU side vertex buffer\r\n   private vbo: WebGLBuffer;  // Vertex Buffer Object -> GPU side vertex buffer\r\n   private iao: Uint16Array;  // Index Array Buffer   -> CPU side index buffer\r\n   private ibo: WebGLBuffer;  // Index Buffer Object  -> GPU side index buffer\r\n\r\n   public constructor(renderer: Renderer) {\r\n      super(renderer, vsSource, fsSource, attribArr, uniforArr);\r\n\r\n      const PIPE  = RectanglePipeline;\r\n      let gl      = this.renderer.gl;\r\n      gl.useProgram(this.program);\r\n\r\n      this.vao    = new Float32Array(PIPE.MAX_UNIT);\r\n      this.vbo    = <WebGLBuffer> gl.createBuffer();\r\n      this.iao    = new Uint16Array(PIPE.MAX_INDICES);\r\n      this.ibo    = <WebGLBuffer> gl.createBuffer();\r\n      \r\n      /* SETTING UP UNIFORMS */\r\n      let u_projection = this.uniforms.u_projection;\r\n      gl.uniformMatrix4fv(u_projection.location, false, renderer.projection);\r\n\r\n      /* SETTING UP ATTRIBUTES */\r\n      let a_position = this.attributes.a_position;\r\n      let a_color    = this.attributes.a_color;\r\n\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo);\r\n      gl.enableVertexAttribArray(a_position.location);\r\n      gl.vertexAttribPointer(a_position.location, 3, gl.FLOAT, false, PIPE.VERTEX_SIZE, 0);\r\n      gl.enableVertexAttribArray(a_color.location);\r\n      gl.vertexAttribPointer(a_color.location, 3, gl.FLOAT, false, PIPE.VERTEX_SIZE, PIPE.UNIT_SIZE * 3);\r\n\r\n      gl.bufferData(gl.ARRAY_BUFFER, PIPE.MAX_SIZE, gl.DYNAMIC_DRAW);\r\n\r\n      /* SETTING UP INDEX BUFFER/ARRAY OBJECT */\r\n      for (let i = 0; i < PIPE.MAX_QUAD; i++) {\r\n         let offset = 4 * i;\r\n\r\n         this.iao.set([\r\n            0 + offset, 1 + offset, 2 + offset,\r\n            2 + offset, 1 + offset, 3 + offset\r\n         ], PIPE.INDICES_PER_QUAD * i);\r\n      }\r\n\r\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.ibo);\r\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.iao, gl.STATIC_DRAW);\r\n\r\n   }\r\n\r\n   // TODO: add mechanisim to detect object change and only alter necesary values in vao\r\n   public flush(rectangles: Rectangle[]) {\r\n      \r\n      if (!rectangles.length) return;\r\n\r\n      let gl      = this.renderer.gl;\r\n      const PIPE  = RectanglePipeline;\r\n      gl.useProgram(this.program)\r\n\r\n      for (let i = 0; i < rectangles.length; i++) {\r\n         const rectangle = rectangles[i];\r\n         this.vao.set(this.createQuadData(rectangle), i * PIPE.UNITS_PER_QUAD);\r\n      };\r\n\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo);\r\n      gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.vao);\r\n\r\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.ibo);\r\n\r\n      gl.drawElements(\r\n         gl.TRIANGLES,\r\n         PIPE.INDICES_PER_QUAD * rectangles.length, \r\n         gl.UNSIGNED_SHORT,\r\n         0\r\n      );\r\n   };\r\n\r\n   private createQuadData(rect: Rectangle) {\r\n      let [ x, y, z, width, height ] = [ rect.x, rect.y, rect.layer, rect.width, rect.height ]\r\n      let [ r, g, b ] = rect.color;\r\n\r\n      return [\r\n         x        , y         , z, r, g, b,  // ↖ VERTEX\r\n         x + width, y         , z, r, g, b,  // ↗ VERTEX\r\n         x        , y + height, z, r, g, b,  // ↙ VERTEX\r\n         x + width, y + height, z, r, g, b   // ↘ Vertex\r\n      ]\r\n   }\r\n}","import Pipeline from \"./Pipeline\";\r\nimport Renderer from \"../Renderer\";\r\nimport Sprite from \"../../Entities/Sprite\";\r\n\r\nimport {\r\n   vertexShader   as vsSource,\r\n   fragmentShader as fsSource,\r\n   attributes     as attribArr,\r\n   uniforms       as uniforArr\r\n} from '../../Shaders/Sprite';\r\n\r\nexport default class SpritePipeline extends Pipeline <\r\n   typeof attribArr[number],\r\n   typeof uniforArr[number]\r\n> {\r\n   // TODO: change UNIT_SIZE to FLOAT_SIZE and add INT_SIZE for texIndex attribute\r\n   public static readonly MAX_ELEMS          = 2**15;\r\n   private static readonly UNIT_SIZE         = 4;  // sizeof(float) = 4 bytes = sizeof(unit)\r\n   private static readonly UNIT_PER_VERTEX   = 6;  // [ x, y, z, unit, texcoordX, texcoordY ].length = 6\r\n   private static readonly VERTEX_PER_ELEM   = 4;  // A quad has 4 corners aka 4 vertices\r\n   private static readonly INDICES_PER_ELEM  = 6;  // To create a quad we need 2 triangles wich require 3 verticies each, 3 * 2 = 6\r\n   private static readonly MAX_TEXTURE_UNITS = 4;\r\n\r\n   private static readonly VERTEX_SIZE       = SpritePipeline.UNIT_PER_VERTEX   * SpritePipeline.UNIT_SIZE;\r\n   private static readonly UNIT_PER_ELEM     = SpritePipeline.VERTEX_PER_ELEM   * SpritePipeline.UNIT_PER_VERTEX;\r\n   private static readonly MAX_INDICES       = SpritePipeline.INDICES_PER_ELEM  * SpritePipeline.MAX_ELEMS;\r\n   private static readonly MAX_UNIT          = SpritePipeline.UNIT_PER_ELEM     * SpritePipeline.MAX_ELEMS;\r\n   private static readonly MAX_SIZE          = SpritePipeline.MAX_UNIT          * SpritePipeline.UNIT_SIZE;\r\n\r\n   private vao: Float32Array; // Vertex Array Buffer  -> CPU side vertex buffer\r\n   private vbo: WebGLBuffer;  // Vertex Buffer Object -> GPU side vertex buffer\r\n   private iao: Uint16Array;  // Index Array Buffer   -> CPU side index buffer\r\n   private ibo: WebGLBuffer;  // Index Buffer Object  -> GPU side index buffer\r\n\r\n   public constructor(renderer: Renderer) {\r\n      super(renderer, vsSource, fsSource, attribArr, uniforArr);\r\n\r\n      let PIPE    = SpritePipeline;\r\n      let gl      = this.renderer.gl;\r\n      gl.useProgram(this.program)\r\n\r\n      this.vao    = new Float32Array(PIPE.MAX_UNIT);\r\n      this.vbo    = <WebGLBuffer> gl.createBuffer();\r\n      this.iao    = new Uint16Array(PIPE.MAX_INDICES);\r\n      this.ibo    = <WebGLBuffer> gl.createBuffer();\r\n\r\n      /* SETTING UP UNIFORMS */\r\n      let u_projection  = this.uniforms.u_projection;\r\n      let u_textures    = this.uniforms.u_textures;\r\n      let u_camera      = this.uniforms.u_camera;\r\n      gl.uniformMatrix4fv(u_projection.location, false, renderer.projection);\r\n      gl.uniformMatrix4fv(u_camera.location, false, this.renderer.getCameraTransalation());\r\n      \r\n      let texUnitArr: number[] = [];\r\n      for (let i = 0; i < PIPE.MAX_TEXTURE_UNITS; i++) texUnitArr.push(i);\r\n      gl.uniform1iv(u_textures.location, new Int32Array(texUnitArr));\r\n\r\n      /* SETTING UP ATTRIBUTES */\r\n      let a_position    = this.attributes.a_position;\r\n      let a_texIndex    = this.attributes.a_texIndex;\r\n      let a_texCord     = this.attributes.a_texCoord;\r\n\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo);\r\n\r\n      gl.enableVertexAttribArray(a_position.location);\r\n      gl.vertexAttribPointer(a_position.location, 3, gl.FLOAT, false, PIPE.VERTEX_SIZE, 0);\r\n      gl.enableVertexAttribArray(a_texIndex.location);\r\n      gl.vertexAttribPointer(a_texIndex.location, 1, gl.FLOAT, false, PIPE.VERTEX_SIZE, PIPE.UNIT_SIZE * 3);\r\n      gl.enableVertexAttribArray(a_texCord.location);\r\n      gl.vertexAttribPointer(a_texCord.location, 2, gl.FLOAT, false, PIPE.VERTEX_SIZE, PIPE.UNIT_SIZE * 4);\r\n      \r\n      gl.bufferData(gl.ARRAY_BUFFER, PIPE.MAX_SIZE, gl.DYNAMIC_DRAW);\r\n\r\n      /* SETTING UP INDEX BUFFER/ARRAY OBJECT */\r\n      for (let i = 0; i < PIPE.MAX_ELEMS; i++) {\r\n         let offset = 4 * i;\r\n\r\n         this.iao.set([\r\n            0 + offset, 1 + offset, 2 + offset,\r\n            2 + offset, 1 + offset, 3 + offset\r\n         ], PIPE.INDICES_PER_ELEM * i);\r\n      }\r\n\r\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.ibo);\r\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.iao, gl.STATIC_DRAW);\r\n   }\r\n   // TODO: add mechanisim to detect object change and only alter necesary values in vao\r\n   public flush(sprites: Sprite[]) {\r\n      if (!sprites.length) return;\r\n\r\n      let gl      = this.renderer.gl;\r\n      const PIPE  = SpritePipeline;\r\n      gl.useProgram(this.program);\r\n      \r\n      gl.uniformMatrix4fv(this.uniforms.u_camera.location, false, this.renderer.getCameraTransalation());\r\n\r\n      for (let i = 0; i < sprites.length; i++) {\r\n         const sprite = sprites[i];\r\n         this.vao.set(this.createQuadData(sprite), i * PIPE.UNIT_PER_ELEM)\r\n      }\r\n\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo);\r\n      gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.vao);\r\n      \r\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.ibo);\r\n\r\n      gl.drawElements(\r\n         gl.TRIANGLES,\r\n         PIPE.INDICES_PER_ELEM * sprites.length,\r\n         gl.UNSIGNED_SHORT,\r\n         0\r\n      )\r\n   }\r\n\r\n   private createQuadData(sprite: Sprite) {\r\n      let [ x, y, layer, width, height, texture, frame ] = [\r\n         sprite.x,\r\n         sprite.y,\r\n         sprite.layer,\r\n         sprite.width,\r\n         sprite.height,\r\n         sprite.texture,\r\n         sprite.frame\r\n      ]\r\n\r\n      let [ unit, tx1, ty1, tx2, ty2 ] = [\r\n         texture.unit,\r\n         texture.frameData[frame][0],\r\n         texture.frameData[frame][1],\r\n         texture.frameData[frame][2],\r\n         texture.frameData[frame][3]\r\n      ]\r\n\r\n      let quad = [\r\n         x           , y         , layer, unit, tx1, ty1,  // v1\r\n         x + width   , y         , layer, unit, tx2, ty1,  // v2\r\n         x           , y + height, layer, unit, tx1, ty2,  // v3\r\n         x + width   , y + height, layer, unit, tx2, ty2   // v4\r\n      ]\r\n      \r\n      return quad;\r\n   }\r\n\r\n}","import Surface from \"../Surface\";\r\nimport Pipeline from \"./Pipelines/Pipeline\";\r\nimport SpritePipeline from \"./Pipelines/Sprite\";\r\nimport RectanglePipeline from \"./Pipelines/Rectangle\";\r\nimport Entity from \"../Entities/Entity\";\r\nimport { createContext, createOrthoMatrix, createTranslationMatrix } from \"../webgl-utils\";\r\nimport Texture from \"./Texture\";\r\nimport Camera from \"./Camera\";\r\n\r\nexport default class Renderer {\r\n\r\n   private readonly surface: Surface;\r\n   private readonly camera: Camera;\r\n   public readonly gl: WebGLRenderingContext;\r\n\r\n   private pipelines: Record<EntityType, Pipeline>;\r\n   public entityLists: Record<EntityType, Entity[]>;\r\n   \r\n   public projection: number[];\r\n\r\n   constructor(surface: Surface) {\r\n      this.surface         = surface;\r\n      this.camera          = surface.camera;\r\n      this.gl              = createContext(surface.canvas);\r\n      this.projection      = createOrthoMatrix(surface.width, surface.height);\r\n      this.entityLists     = surface.entityLists;\r\n\r\n      // Initilizing other systems\r\n      Texture.init(this.gl);\r\n\r\n      this.pipelines       = {\r\n         rectangle:  new RectanglePipeline(this),\r\n         sprite:     new SpritePipeline(this)\r\n      };\r\n\r\n      // Setting up surface for drawing\r\n      let gl         = this.gl;\r\n      let [r, g, b]  = surface.background;\r\n\r\n      gl.enable(gl.BLEND);\r\n      gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n      gl.clearColor(r, g, b, 1);\r\n      gl.viewport(0, 0, surface.width, surface.height);\r\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n   }\r\n\r\n   public draw = () => {\r\n      let gl   = this.gl;\r\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n      \r\n      this.pipelines.sprite.flush(this.entityLists.sprite);\r\n      this.pipelines.rectangle.flush(this.entityLists.rectangle);\r\n   }\r\n\r\n   public getCameraTransalation = () => createTranslationMatrix(this.camera.x, this.camera.y);\r\n}","import { createTexture } from \"../webgl-utils\";\r\nimport { loadImage, mapValue } from \"../util\";\r\n\r\n/**\r\n * TODO:\r\n *    - Add mechanisim to avoid texture duplication in case of user error.\r\n */\r\nexport default class Texture {\r\n\r\n   private static MAX_TEXTURE_UNITS: number = 16;\r\n   private static gl: WebGLRenderingContext;\r\n   private static nextUnit: number = 0;\r\n   private static paths: string[] = [];\r\n\r\n   public unit: number;\r\n   public img: HTMLImageElement;\r\n   public glTexture: WebGLTexture;\r\n   public frameData: frame[];\r\n\r\n   public static init = (gl: WebGLRenderingContext) => {\r\n      if (Texture.gl) throw new Error('already initiated texture class');\r\n      Texture.gl = gl;\r\n   }\r\n   \r\n   constructor(img: HTMLImageElement, config?: frameDataConfig) {\r\n      if (Texture.nextUnit > Texture.MAX_TEXTURE_UNITS) throw new Error('no more texture units :(');\r\n      if (!Texture.gl) throw new Error('call Texture.init method first');\r\n      if (Texture.paths.includes(img.src)) console.warn('texture already exists, you\\'re duplicating');\r\n\r\n      this.img       = img;\r\n      this.unit      = Texture.nextUnit;\r\n      this.glTexture = createTexture(Texture.gl, img, this.unit);\r\n      this.frameData = (config) ? Texture.createFrameData(\r\n         config.height,\r\n         config.width,\r\n         config.cols,\r\n         config.rows\r\n      ) : [[0, 0, 1, 1]];\r\n\r\n      Texture.paths.push(img.src);\r\n      Texture.nextUnit++;\r\n   }\r\n\r\n   /* <------------------------------------| UTLITY METHODS |------------------------------------> */\r\n   /**\r\n    * @param height sheet height\r\n    * @param width sheet width\r\n    * @param cols number of columns\r\n    * @param rows number of rows\r\n    */\r\n   public static createFrameData = (\r\n      height: number,\r\n      width: number,\r\n      cols: number,\r\n      rows: number,\r\n   ): frame[] => {\r\n      let frameData: frame[] = [];\r\n\r\n      let [ spriteHeight, spriteWidth ] = [\r\n         height / rows,\r\n         width / cols\r\n      ];\r\n\r\n      let heightRange   = { min: 0, max: height };\r\n      let widthRange    = { min: 0, max: width };\r\n      let normalRange   = { min: 0, max: 1 };\r\n\r\n      for (let row = 0; row < rows; row++) {\r\n         for (let col = 0; col < cols; col++) {\r\n            frameData.push([\r\n               mapValue(col * spriteWidth, widthRange, normalRange),                   // x1\r\n               mapValue(row * spriteHeight, heightRange, normalRange),                 // y1\r\n               mapValue(col * spriteWidth + spriteWidth, widthRange, normalRange),     // x2\r\n               mapValue(row * spriteHeight + spriteHeight, heightRange, normalRange)   // y2\r\n            ])\r\n         }\r\n      }\r\n\r\n      return frameData;\r\n   };\r\n\r\n   /* <------------------------------------| FACTORY METHODS |------------------------------------> */\r\n\r\n   public static fromPath = async (path: string, config?: frameDataConfig): Promise<Texture> => {\r\n      let img = await loadImage(path);\r\n      return new Texture(img, config);\r\n   }\r\n}","export const attributes = ['a_position', 'a_color'] as const;\r\nexport const uniforms = ['u_projection'] as const;\r\n\r\nexport const vertexShader = `\r\n   precision mediump float;\r\n\r\n   attribute vec3 ${attributes[0]};\r\n   attribute vec3 ${attributes[1]};\r\n\r\n   uniform mat4 ${uniforms[0]};\r\n\r\n   varying vec3 v_color;\r\n   \r\n   void main()\r\n   {\r\n      gl_Position = ${uniforms[0]} * vec4(${attributes[0]}, 1);\r\n      v_color = ${attributes[1]};\r\n   }\r\n` as const;\r\n\r\nexport const fragmentShader = `\r\n   precision mediump float;\r\n\r\n   varying vec3 v_color;\r\n\r\n   void main()\r\n   {\r\n      gl_FragColor = vec4(v_color, 1);\r\n   }\r\n` as const;","export const attributes = ['a_position', 'a_texCoord', 'a_texIndex'] as const;\r\nexport const uniforms = ['u_projection', 'u_textures', 'u_camera'] as const;\r\n\r\nexport const vertexShader = `\r\n   precision mediump float;\r\n\r\n   attribute vec3 ${attributes[0]};\r\n   attribute vec2 ${attributes[1]};\r\n   attribute float ${attributes[2]};\r\n\r\n   uniform mat4 ${uniforms[0]};\r\n   uniform mat4 ${uniforms[2]};\r\n\r\n   varying vec2 v_texCoord;\r\n   varying float v_texIndex;\r\n\r\n   void main()\r\n   {\r\n      gl_Position = (${uniforms[0]} * ${uniforms[2]}) * vec4(${attributes[0]}, 1);\r\n      v_texCoord = ${attributes[1]};\r\n      v_texIndex = ${attributes[2]};\r\n   }\r\n` as const;\r\n\r\nexport const fragmentShader = `\r\n   precision mediump float;\r\n   \r\n   uniform sampler2D ${uniforms[1]}[4];\r\n\r\n   varying vec2 v_texCoord;\r\n   varying float v_texIndex;\r\n\r\n   vec4 getTexture(sampler2D textures[4], int index, vec2 texCoord) {\r\n\r\n      vec4 color = vec4(0);\r\n      \r\n      // TODO: binary search\r\n\r\n      for (int i = 0; i < 4; ++i) {\r\n        vec4 sampler = texture2D(u_textures[i], texCoord);\r\n        if (i == index) {\r\n          color += sampler;\r\n        }\r\n      }\r\n\r\n      return color;\r\n  }\r\n\r\n   void main()\r\n   {\r\n      int index = int(v_texIndex);\r\n      gl_FragColor = getTexture(${uniforms[1]}, index, v_texCoord);\r\n   }\r\n` as const;","import Entity from \"./Entities/Entity\";\r\nimport Rectangle from \"./Entities/Rectangle\";\r\nimport Sprite from \"./Entities/Sprite\";\r\nimport InputHandler from \"./Input/InputHandler\";\r\nimport Key from \"./Input/Key\";\r\nimport Camera from \"./Renderer/Camera\";\r\nimport Renderer from \"./Renderer/Renderer\";\r\nimport Texture from \"./Renderer/Texture\";\r\nimport { emptyFunc } from \"./util\";\r\nimport { createCanvas } from \"./webgl-utils\";\r\n\r\nexport default class Surface {\r\n\r\n   public readonly width: number;\r\n   public readonly height: number;\r\n   public readonly canvas: HTMLCanvasElement;\r\n   public readonly background: rgb;\r\n   public entityLists: Record<EntityType, Entity[]>;\r\n\r\n   public readonly renderer: Renderer;\r\n   public readonly camera: Camera;\r\n   public readonly inputHandler: InputHandler;\r\n\r\n   public update: (dt: number) => void;\r\n   private previousTime: number;\r\n\r\n   public fps: number = 0;\r\n\r\n   constructor(width: number = 1200, height: number = 900, background: rgb = [1, 1, 1]) {\r\n\r\n      this.width        = width;\r\n      this.height       = height;\r\n      this.canvas       = createCanvas(width, height);\r\n      this.update       = emptyFunc;\r\n      this.background   = background;\r\n\r\n      this.entityLists  = {   // TODO: create a const array to tidy up this code\r\n         rectangle:  [],\r\n         sprite:     []\r\n      }\r\n\r\n      this.camera       = new Camera(this);\r\n      this.renderer     = new Renderer(this);\r\n      this.inputHandler = new InputHandler(this.canvas);\r\n      this.previousTime = performance.now();\r\n\r\n      requestAnimationFrame(this.loop);\r\n   }\r\n\r\n   /**\r\n    * @description main game loop. Callback order:\r\n    *    1. update\r\n    *    2. draw\r\n    * @param currentTime number, basically performance.now() \r\n    */\r\n   private loop = (currentTime: number) => {\r\n      let timeElapsed = currentTime - this.previousTime;\r\n      this.fps = 1000 / timeElapsed;\r\n\r\n      this.update(timeElapsed *= 0.001);\r\n      this.renderer.draw();\r\n\r\n      this.previousTime = currentTime;\r\n      requestAnimationFrame(this.loop);\r\n   }\r\n\r\n   public addEntity(e: Entity) {\r\n      let entityType: EntityType = 'rectangle';\r\n      if (e instanceof Rectangle)   entityType = 'rectangle';\r\n      if (e instanceof Sprite)      entityType = 'sprite';\r\n\r\n      this.entityLists[entityType].push(e);\r\n   }\r\n\r\n   public addKeyInput = (\r\n      keyCode: keyCode,\r\n      onDownCallback?: () => void,\r\n      onUpCallback?: () => void\r\n      ): Key => {\r\n      return this.inputHandler.addKey(keyCode, onDownCallback, onUpCallback);\r\n   }\r\n\r\n   // TODO: add config/layout parameter\r\n   public createTexture = async (path: string) => {\r\n      let img: HTMLImageElement;\r\n      let texture: Texture;\r\n\r\n      img = new Image();\r\n      img.src = path;\r\n      await img.decode();\r\n\r\n      return new Texture(img);\r\n   }\r\n}","import Surface from './Surface';\r\nimport Sprite from './Entities/Sprite';\r\nimport { createCanvas, createContext, createOrthoMatrix, createProgram, createTexture } from './webgl-utils';\r\nimport { vertexShader as rectangle_vs, fragmentShader as rectangle_fs } from './Shaders/Rectangle';\r\nimport { vertexShader as sprite_vs, fragmentShader as sprite_fs } from './Shaders/Sprite';\r\nimport { mapValue, rand, loadImage } from './util';\r\nimport Texture from './Renderer/Texture';\r\n\r\nlet start = async () => {\r\n\r\n   let s = new Surface(1200, 850, [0.15, 0.15, 0.15]);\r\n\r\n   let gl = s.renderer.gl;\r\n   \r\n   let size = 64\r\n   let scale = 2;\r\n   let amount = 2**12;\r\n   \r\n   let texture = await Texture.fromPath('./assets/test_sheet.png', { height: size, width: size, cols: 2, rows: 2 });\r\n   \r\n   class mySprites extends Sprite {\r\n      \r\n      speed = { x: rand(-50, 50), y: rand(-50, 50) };\r\n      \r\n      constructor() {\r\n         super(\r\n            s,\r\n            rand(-s.width, s.width),\r\n            rand(-s.height, s.height),\r\n            texture\r\n         );\r\n      }\r\n   }\r\n      \r\n   let sprites: mySprites[] = [];\r\n\r\n   for (let i = 0; i < amount; i++) {\r\n      let sprite = new mySprites();\r\n\r\n      setInterval(sprite.randomFrame, rand(0, 1000, true));\r\n\r\n      sprites.push(sprite)\r\n   }\r\n\r\n   let fpsText = <HTMLElement>document.getElementById('fps');\r\n   let amountText = <HTMLElement>document.getElementById('amount');\r\n\r\n   amountText.innerHTML = `Amount: ${amount}`;\r\n\r\n   let a_key = s.addKeyInput('a');\r\n   let w_key = s.addKeyInput('w');\r\n   let s_key = s.addKeyInput('s');\r\n   let d_key = s.addKeyInput('d');\r\n   let cSpeed = 600;\r\n\r\n   s.update = (dt: number) => {\r\n      sprites.forEach( p => {\r\n         \r\n         // if (p.x <= 0 || p.x + p.width >= s.width) p.speed.x *= -1;\r\n         // if (p.y <= 0 || p.y + p.height >= s.height) p.speed.y *= -1;\r\n         \r\n         p.x += p.speed.x * dt;\r\n         p.y += p.speed.y * dt;\r\n\r\n      });\r\n\r\n      if (a_key.pressed) s.camera.move(cSpeed * dt, 0);\r\n      if (d_key.pressed) s.camera.move(-cSpeed * dt, 0);\r\n      if (w_key.pressed) s.camera.move(0, cSpeed * dt);\r\n      if (s_key.pressed) s.camera.move(0, -cSpeed * dt);\r\n\r\n      console.log(s.renderer.getCameraTransalation()[6]);\r\n\r\n      (<string>fpsText.innerHTML) = `FPS: ${s.fps.toPrecision(3)}`;\r\n   };\r\n}\r\n\r\nconst learningDrawElements = () => {\r\n   let canvas        = createCanvas(1200, 900);\r\n   let gl            = createContext(canvas);\r\n   let projection    = createOrthoMatrix(canvas.width, canvas.height);\r\n   let program       = createProgram(gl, rectangle_vs, rectangle_fs);\r\n\r\n   const MAX_QUAD_AMOUNT   = 1000;\r\n   const VERTEX_PER_QUAD   = 4;\r\n   const UNIT_PER_VERTEX   = 5;\r\n   const VERTEX_SIZE       = 4 * UNIT_PER_VERTEX;\r\n   const MAX_VERTEX_AMOUNT = MAX_QUAD_AMOUNT * VERTEX_PER_QUAD * UNIT_PER_VERTEX;\r\n\r\n   gl.useProgram(program);\r\n\r\n   class Rectangle {\r\n      x: number\r\n      y: number\r\n      width: number\r\n      height: number\r\n      color: rgb\r\n\r\n      speed: [x: number, y: number];\r\n\r\n      constructor(x: number, y: number, width: number, height: number, color: rgb) {\r\n         this.x      = x;\r\n         this.y      = y;\r\n         this.width  = width;\r\n         this.height = height;\r\n         this.color  = color;\r\n\r\n         this.speed = [ rand(-30, 30), rand(-30, 30) ];\r\n      }\r\n   }\r\n\r\n   let entities: Rectangle[] = [];\r\n\r\n   type vertex = [ x: number, y: number, r: number, g: number, b: number ];\r\n   type quad = [ v1: vertex, v2: vertex, v3: vertex, v4: vertex ];\r\n\r\n   const createQuad = (x: number, y: number, width: number, height: number, rgb: rgb) => {\r\n      let [r, g, b] = rgb;\r\n\r\n      let v1: vertex = [ x           , y         , r, g, b ];\r\n      let v2: vertex = [ x + width   , y         , r, g, b ];\r\n      let v3: vertex = [ x           , y + height, r, g, b ];\r\n      let v4: vertex = [ x + width   , y + height, r, g, b ];\r\n\r\n      let quad: quad = [ v1, v2, v3, v4 ];\r\n      \r\n      return quad;\r\n   }\r\n\r\n   for (let i = 0; i < MAX_QUAD_AMOUNT; i++) {\r\n      let [ width, height ]   = [ rand(5, 250), rand(5, 250) ];\r\n      let [ x, y ]            = [ rand(0, canvas.width - width), rand(0, canvas.height - height) ];\r\n      let color: rgb          = [ rand(0, 1), rand(0, 1), rand(0, 1) ];\r\n      entities.push(new Rectangle(x, y, width, height, color));\r\n   }\r\n   \r\n   let vao = new Float32Array(new Array<number>(MAX_VERTEX_AMOUNT));  // VERTEX ARRAY OBJECT\r\n\r\n   let indices: number[] = [];\r\n\r\n   for (let i = 0; i < entities.length; i++) {\r\n      let offset = 4 * i;  // SIZE OF QUAD * CURRENT QUAD INDEX\r\n\r\n      indices.push(\r\n         0 + offset, 1 + offset, 2 + offset,\r\n         2 + offset, 1 + offset, 3 + offset\r\n      )\r\n   }\r\n\r\n   let positionLocation    = gl.getAttribLocation(program, 'a_position');\r\n   let colorLocation       = gl.getAttribLocation(program, 'a_color');\r\n   let projectionLocation  = gl.getUniformLocation(program, 'u_projection');\r\n\r\n   gl.uniformMatrix4fv(projectionLocation, false, projection);\r\n\r\n   let vbo = <WebGLBuffer> gl.createBuffer();\r\n   gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\r\n   \r\n   gl.enableVertexAttribArray(positionLocation);\r\n   gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, VERTEX_SIZE, 0);\r\n   gl.enableVertexAttribArray(colorLocation);\r\n   gl.vertexAttribPointer(colorLocation, 3, gl.FLOAT, false, VERTEX_SIZE, Float32Array.BYTES_PER_ELEMENT * 2);\r\n   \r\n   gl.bufferData(gl.ARRAY_BUFFER, MAX_QUAD_AMOUNT * VERTEX_PER_QUAD * VERTEX_SIZE, gl.DYNAMIC_DRAW);\r\n   \r\n   let ibo = <WebGLBuffer> gl.createBuffer();\r\n   gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\r\n   gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n   gl.clearColor(0, 0, 0, 1);\r\n   gl.viewport(0, 0, canvas.width, canvas.height);\r\n   gl.clear(gl.COLOR_BUFFER_BIT);\r\n   \r\n   let previousTime = performance.now();\r\n\r\n   const draw = (currentTime: number) => {\r\n      let dt = (currentTime - previousTime) * 0.001;\r\n\r\n      gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n      entities.forEach((r, i) => {\r\n         r.x += r.speed[0] * dt;\r\n         r.y += r.speed[1] * dt;\r\n         let offset = i * UNIT_PER_VERTEX * VERTEX_PER_QUAD;\r\n         createQuad(r.x, r.y, r.width, r.height, r.color).forEach( (v, j) =>  vao.set(v, offset + j * UNIT_PER_VERTEX) )\r\n      });\r\n\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\r\n      gl.bufferSubData(gl.ARRAY_BUFFER, 0, vao);\r\n\r\n      gl.drawElements(\r\n         gl.TRIANGLES,\r\n         6 * entities.length, \r\n         gl.UNSIGNED_SHORT,\r\n         0\r\n      );\r\n\r\n      previousTime = currentTime;\r\n      requestAnimationFrame(draw);\r\n   }\r\n\r\n   requestAnimationFrame(draw);\r\n}\r\n\r\nconst learningTextures = async () => {\r\n   let canvas        = createCanvas(1200, 900);\r\n   let gl            = createContext(canvas);\r\n   let projection    = createOrthoMatrix(canvas.width, canvas.height);\r\n   let program       = createProgram(gl, sprite_vs, sprite_fs);\r\n\r\n   const MAX_QUAD          = 2**10;\r\n   const UNIT_SIZE         = 4;\r\n   const UNITS_PER_VERTEX  = 5;  // [x, y, texture_index, texcord_x, texcord_y]\r\n   const VERTEX_PER_QUAD   = 4;\r\n   const INDICES_PER_QUAD  = 6;\r\n\r\n   const VERTEX_SIZE       = UNIT_SIZE       * UNITS_PER_VERTEX;\r\n   const UNITS_PER_QUAD    = VERTEX_PER_QUAD * UNITS_PER_VERTEX;\r\n   const MAX_INDICES       = MAX_QUAD        * INDICES_PER_QUAD;\r\n   const MAX_UNIT          = UNITS_PER_QUAD  * MAX_QUAD;\r\n   const MAX_SIZE          = MAX_UNIT        * UNIT_SIZE;\r\n\r\n   let vao     = new Float32Array(MAX_UNIT);\r\n   let vbo    = <WebGLBuffer> gl.createBuffer();\r\n   let iao    = new Uint16Array(MAX_INDICES);\r\n   let ibo    = <WebGLBuffer> gl.createBuffer();\r\n      \r\n   gl.useProgram(program);\r\n\r\n   class Sprite {\r\n      x: number\r\n      y: number\r\n      width: number\r\n      height: number\r\n      texture: WebGLTexture;\r\n      unit: number;\r\n\r\n      constructor(x: number, y: number, unit: number, source: HTMLImageElement) {\r\n         this.x         = x;\r\n         this.y         = y;\r\n         this.width     = source.width;\r\n         this.height    = source.height;\r\n         this.unit      = unit;\r\n         this.texture   = createTexture(gl, source, unit);\r\n      }\r\n\r\n      scale = (n: number) => {\r\n         this.width *= n;\r\n         this.height *= n;\r\n         return this;\r\n      }\r\n   }\r\n\r\n   let spritesList: Sprite[] = [\r\n      new Sprite(100, 100, 0, await loadImage('./assets/debug.png')).scale(5),\r\n      new Sprite(500, 300, 1, await loadImage('./assets/guy.png')).scale(5)\r\n   ];\r\n\r\n   const createQuadData = (sprite: Sprite) => {\r\n      let [ x, y, width, height, unit ] = [\r\n         sprite.x,\r\n         sprite.y,\r\n         sprite.width,\r\n         sprite.height,\r\n         sprite.unit\r\n      ]\r\n\r\n      let quad = [\r\n         x           , y         , unit, 0, 0,  // v1\r\n         x + width   , y         , unit, 1, 0,  // v2\r\n         x           , y + height, unit, 0, 1,  // v3\r\n         x + width   , y + height, unit, 1, 1  // v4\r\n      ]\r\n      \r\n      return quad;\r\n   };\r\n\r\n   for (let i = 0; i < MAX_QUAD; i++) {\r\n      let offset = 4 * i;  // SIZE OF QUAD * CURRENT QUAD INDEX\r\n\r\n      iao.set([\r\n         0 + offset, 1 + offset, 2 + offset,\r\n         2 + offset, 1 + offset, 3 + offset\r\n      ], INDICES_PER_QUAD * i)\r\n   }\r\n\r\n   let positionLocation    = gl.getAttribLocation(program, 'a_position');\r\n   let texcoordLocation    = gl.getAttribLocation(program, 'a_texCoord');\r\n   let texIndexLocation    = gl.getAttribLocation(program, 'a_texIndex');\r\n   let projectionLocation  = gl.getUniformLocation(program, 'u_projection');\r\n   let texturesLocation    = gl.getUniformLocation(program, 'u_textures');\r\n\r\n   gl.uniformMatrix4fv(projectionLocation, false, projection);\r\n   // gl.uniform1i(textureLocation, 0);\r\n   gl.uniform1iv(texturesLocation, new Int32Array([0, 1, 2, 3]));\r\n\r\n   gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\r\n   \r\n   gl.enableVertexAttribArray(positionLocation);\r\n   gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, VERTEX_SIZE, 0);\r\n   gl.enableVertexAttribArray(texIndexLocation);\r\n   gl.vertexAttribPointer(texIndexLocation, 1, gl.FLOAT, false, VERTEX_SIZE, UNIT_SIZE * 2);\r\n   gl.enableVertexAttribArray(texcoordLocation);\r\n   gl.vertexAttribPointer(texcoordLocation, 2, gl.FLOAT, false, VERTEX_SIZE, UNIT_SIZE * 3);\r\n   \r\n   gl.bufferData(gl.ARRAY_BUFFER, MAX_SIZE, gl.DYNAMIC_DRAW);\r\n   \r\n   gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\r\n   gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(iao), gl.STATIC_DRAW);\r\n\r\n   gl.clearColor(0, 0, 0, 1);\r\n   gl.viewport(0, 0, canvas.width, canvas.height);\r\n   gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n   gl.enable(gl.BLEND);\r\n   gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n   \r\n   let previousTime = performance.now();\r\n\r\n   const update = (dt: number) => {\r\n\r\n   }\r\n\r\n   const draw = (currentTime: number) => {\r\n      let dt = (currentTime - previousTime) * 0.001;\r\n\r\n      gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n      spritesList.forEach( (s, i) => {\r\n         vao.set(createQuadData(s), i * UNITS_PER_QUAD)\r\n      })\r\n\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\r\n      gl.bufferSubData(gl.ARRAY_BUFFER, 0, vao);\r\n\r\n      gl.drawElements(\r\n         gl.TRIANGLES,\r\n         INDICES_PER_QUAD * spritesList.length, \r\n         gl.UNSIGNED_SHORT,\r\n         0\r\n      );\r\n\r\n      previousTime = currentTime;\r\n      requestAnimationFrame(draw);\r\n   }\r\n\r\n   requestAnimationFrame(draw);\r\n}\r\n\r\n// learningTextures();\r\n\r\nstart();","export const emptyFunc = () => {};\r\n\r\nexport const isPowerOf2 = (num: number) => {\r\n   return (num & (num - 1)) == 0;\r\n};\r\n\r\nexport const rand = (min: number, max: number, round?: boolean) => {\r\n   let range = max - min;\r\n   let value = Math.random() * range + min;\r\n   value = (round) ? Math.round(value) : value;\r\n   return value;\r\n}\r\n\r\n/**\r\n * @description linearly maps value from range to another range\r\n * @copyright https://rosettacode.org/wiki/Map_range\r\n * @param value value to be mapped from 'fRange' to 'tRange'\r\n * @param fRange from range\r\n * @param tRange to range\r\n * @returns mapped value\r\n */\r\nexport const mapValue = (\r\n   value: number,\r\n   fRange: { min: number; max: number },\r\n   tRange: { min: number; max: number }\r\n): number =>  (tRange.min) + ( (value - fRange.min)*(tRange.max - tRange.min)/(fRange.max - fRange.min) );\r\n\r\n\r\nexport const loadImage = async (path: string) => {\r\n   let img = new Image();\r\n   img.src = path;\r\n   await img.decode();\r\n   return img;\r\n};","export const createContext = (canvas: HTMLCanvasElement): WebGLRenderingContext => {\r\n   let gl = canvas.getContext('webgl');\r\n   if (!gl) console.error(`couldn't get webgl context`);\r\n   return <WebGLRenderingContext>gl;\r\n}\r\n\r\n/**\r\n * @param gl webgl rendering context\r\n * @param type vertex or fragment?\r\n * @param source GLSL script\r\n */\r\n export const createShader = (\r\n   gl: WebGLRenderingContext,\r\n   type: 'vertex' | 'fragment',\r\n   source: string\r\n): WebGLShader => {\r\n   let shaderType = type == 'vertex' ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER;\r\n   let shader = <WebGLShader>gl.createShader(shaderType);\r\n\r\n   gl.shaderSource(shader, source);\r\n   gl.compileShader(shader);\r\n\r\n   if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n      console.error(`Error compiling shader`, gl.getShaderInfoLog(shader));\r\n      gl.deleteShader(shader);\r\n   }\r\n\r\n   return shader;\r\n};\r\n\r\n\r\nexport const createProgram = (\r\n   gl: WebGLRenderingContext,\r\n   vertextShader: WebGLShader | string,\r\n   fragmentShader: WebGLShader | string\r\n   ): WebGLProgram => {\r\n\r\n   let program = <WebGLProgram>gl.createProgram();\r\n\r\n   vertextShader =\r\n      typeof vertextShader == 'string'\r\n         ? createShader(gl, 'vertex', vertextShader)\r\n         : vertextShader;\r\n   \r\n   fragmentShader = typeof fragmentShader == 'string'\r\n         ? createShader(gl, 'fragment', fragmentShader)\r\n         : fragmentShader;\r\n\r\n\r\n   gl.attachShader(program, vertextShader);\r\n   gl.attachShader(program, fragmentShader);\r\n\r\n   gl.linkProgram(program);\r\n\r\n   if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n      console.error(\r\n         `Error compiling program `,\r\n         gl.getProgramInfoLog(program)\r\n      );\r\n      gl.deleteProgram(program);\r\n   }\r\n\r\n   return program;\r\n}\r\n\r\nexport const setAttribute = (\r\n   gl: WebGLRenderingContext,\r\n   data: Float32Array,\r\n   buffer: WebGLBuffer,\r\n   location: number,\r\n   size: number = 2,\r\n   type: number = gl.FLOAT\r\n) => {\r\n   gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n   gl.enableVertexAttribArray(location);\r\n   gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\r\n   gl.vertexAttribPointer(location, size, type, false, 0, 0);\r\n};\r\n\r\nexport const setUniform = (\r\n   gl: WebGLRenderingContext,\r\n   data: number[],\r\n   location: WebGLUniformLocation,\r\n   // type: number,\r\n   // size: numebr\r\n) => {\r\n   // TODO\r\n}\r\n\r\nexport const createCanvas = (width: number, height: number) => {\r\n   let canvas = document.createElement('canvas');\r\n   canvas.width = width;\r\n   canvas.height = height;\r\n   document.body.append(canvas);\r\n   return canvas;\r\n}\r\n\r\n/**\r\n * @param gl WebGLRenderingContext\r\n * @param source HTMLImageElement\r\n * @returns WebGLTexture\r\n */\r\nexport const createTexture = (gl: WebGLRenderingContext, source: HTMLImageElement, unit?: number): WebGLTexture => {\r\n   let texture = <WebGLTexture>gl.createTexture();\r\n   unit = (unit) ? unit : 0;\r\n\r\n   gl.activeTexture(gl.TEXTURE0 + unit);\r\n   gl.bindTexture(gl.TEXTURE_2D, texture);\r\n   gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source);\r\n   \r\n   gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n   gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n   gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n   gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n   // gl.generateMipmap(gl.TEXTURE_2D);\r\n\r\n   return texture;\r\n}\r\n\r\n/**\r\n * \r\n * @copyright https://wikimedia.org/api/rest_v1/media/math/render/svg/1d2af32ec0b29f7819e989e82c91dcee431a9921\r\n */\r\nexport const createOrthoMatrix = (\r\n   right: number,\r\n   bottom: number,\r\n   left: number   = 0,\r\n   top: number    = 0,\r\n   far: number    = 1000,\r\n   near: number   = -1000\r\n) => {\r\n   let mat = new Array<number>(4 * 4).fill(0);\r\n\r\n   mat[0]   = 2 / (right - left);\r\n   mat[5]   = 2 / (top - bottom),\r\n   mat[10]  = -2 / (far - near);\r\n   mat[12]  = -(right + left) / (right - left);\r\n   mat[13]  = -(top + bottom) / (top - bottom);\r\n   mat[14]  = -(far + near)/(far - near);\r\n   mat[15]  = 1;\r\n\r\n   return mat;\r\n}\r\n\r\n/**\r\n * @copyright https://en.wikipedia.org/wiki/Transformation_matrix#Affine_transformations\r\n */\r\nexport const createTranslationMatrix = (x: number, y: number) => [\r\n   1,    0,    0,    0,\r\n   0,    1,    0,    0,\r\n   0,    0,    1,    0,\r\n   x,    y,    0,    1\r\n];\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/main.ts\");\n",""],"names":[],"sourceRoot":""}