/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nvar shaders_1 = __webpack_require__(/*! ./shaders */ \"./src/shaders.ts\");\r\n// 0. Creating & setting up canvas element\r\nvar surface = document.createElement('canvas');\r\nsurface.width = 900;\r\nsurface.height = 600;\r\ndocument.body.appendChild(surface);\r\n// 1. Gettings context\r\nvar gl = surface.getContext('webgl');\r\n// 1a. Error correction\r\nif (!gl)\r\n    console.error(\"couldn't get webgl context\");\r\n// let vertexShaderText: string = [\r\n//     'precision mediump float;',\r\n//     '',\r\n//     'attribute vec2 vertexPosition;',\r\n//     'attribute vec3 vertexColor;',\r\n//     'varying vec3 fragColor;',\r\n//     '',\r\n//     'void main()',\r\n//     '{',\r\n//     '  fragColor = vertexColor;',\r\n//     '  gl_Position = vec4(vertexPosition, 0.0, 1.0);',\r\n//     '}'\r\n// ].join('\\n');\r\n// let fragmentShaderText: string = [\r\n//     'precision mediump float;',\r\n//     '',\r\n//     'varying vec3 fragColor;',\r\n//     'void main()',\r\n//     '{',\r\n//     '  gl_FragColor = vec4(fragColor, 1.0);',\r\n//     '}'\r\n// ].join('\\n');\r\n// 2. Create and setup shaders\r\nfunction createShader(gl, type, source) {\r\n    var shader = gl.createShader(type); // 2a. create shader\r\n    gl.shaderSource(shader, source); // 2b. specify source\r\n    gl.compileShader(shader); // 2c. compile shader\r\n    // 2d. error checking\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n        console.error(\"Error compiling shader \", gl.getShaderInfoLog(shader));\r\n        gl.deleteShader(shader);\r\n    }\r\n    return shader;\r\n}\r\nvar vertexShader = createShader(gl, gl.VERTEX_SHADER, shaders_1.vertexShader);\r\nvar fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, shaders_1.fragmentShader);\r\n// 3. creating program\r\nfunction createProgram(gl, vertextShader, fragmentShader) {\r\n    var program = gl.createProgram(); // 3a. create program\r\n    // 3b. attach shaders\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program); // 3c. linking program\r\n    // 3d. error checking\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n        console.error(\"Error compiling program \", gl.getProgramInfoLog(program));\r\n        gl.deleteProgram(program);\r\n    }\r\n    return program;\r\n}\r\nvar program = createProgram(gl, vertexShader, fragmentShader);\r\ngl.useProgram(program); // 3e. use program\r\n// TODO: research this\r\ngl.validateProgram(program);\r\nif (!gl.getProgramParameter(program, gl.VALIDATE_STATUS))\r\n    console.error(\"Validate Error: \", gl.getProgramInfoLog(program));\r\n// 4. Setup attributes & uniforms\r\n// 4a. get attribute locations\r\nvar positionAttribLocation = gl.getAttribLocation(program, \"a_vertexPosition\");\r\nvar colorAttribLocation = gl.getAttribLocation(program, \"a_vertexColor\");\r\n// 4b. enable attributes\r\ngl.enableVertexAttribArray(positionAttribLocation);\r\ngl.enableVertexAttribArray(colorAttribLocation);\r\n// 4c. get uniform locations\r\nvar resolutionUniformLocation = gl.getUniformLocation(program, \"u_resolution\");\r\n// 5. Create & setup buffer (vertex buffer object)\r\nvar vbo = gl.createBuffer(); // 5a. create buffer\r\ngl.bindBuffer(gl.ARRAY_BUFFER, vbo); // 5b. bind buffer\r\n// 5c. setup buffer data\r\nvar vertices = new Float32Array([\r\n    //  x,      y,      r,      g,      b\r\n    0, 0, 1, 0, 0,\r\n    900, 0, 0, 1, 0,\r\n    0, 600, 0, 0, 1,\r\n]);\r\ngl.bufferData(// 5cii. pass in data to buffer\r\ngl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\r\n// 5d. setup buffer/data layout\r\nvar byteSize = Float32Array.BYTES_PER_ELEMENT;\r\nvar stride = 5 * Float32Array.BYTES_PER_ELEMENT;\r\ngl.vertexAttribPointer(// 5di. vertex position data layout\r\npositionAttribLocation, // Attribute index (position within shader attributes)\r\n2, // Amount of elements per data (x, y => 2 elements)\r\ngl.FLOAT, // Type of data\r\nfalse, // Normalize data? (between -1 & 1)\r\nstride, // Stride: How many bytes per data unit (5 vertex * sizeof(float))\r\nbyteSize * 0 // Inner element offset in BYTES\r\n);\r\ngl.vertexAttribPointer(// 5dii. vertex color data layout\r\ncolorAttribLocation, // Attribute index (position within shader attributes)\r\n3, // Amount of elements per data (r, g, b => 3 elements)\r\ngl.FLOAT, // Type of data\r\nfalse, // Normalize data? (between -1 & 1)\r\nstride, // Stride: How many bytes per vertex (5 vertex * sizeof(float))\r\nbyteSize * 2 // Inner element offset in BYTES\r\n);\r\n// 6. setup viewport\r\ngl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\ngl.uniform2f(resolutionUniformLocation, gl.canvas.width, gl.canvas.height);\r\n// 7. draw\r\n// 7a. clear canvas\r\ngl.clearColor(0.84, 0.81, 0.92, 1);\r\ngl.clear(gl.COLOR_BUFFER_BIT);\r\n// 7b. draw\r\ngl.drawArrays(gl.TRIANGLES, 0, 3);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/main.ts\n");

/***/ }),

/***/ "./src/shaders.ts":
/*!************************!*\
  !*** ./src/shaders.ts ***!
  \************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\n/**\r\n * @attribute are inputs\r\n * @varying are outputs\r\n */\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.fragmentShader = exports.vertexShader = void 0;\r\nexports.vertexShader = \"\\n    precision mediump float;\\n\\n    attribute vec2 a_vertexPosition;\\n    attribute vec3 a_vertexColor;\\n    \\n    uniform vec2 u_resolution;\\n\\n    varying vec3 v_fragColor;\\n\\n    void main()\\n    {\\n        v_fragColor = a_vertexColor;\\n\\n        // convert the position from pixels to 0.0 -> 1.0\\n        vec2 zeroToOne = a_vertexPosition / u_resolution;\\n \\n        // convert from 0 -> 1 to 0 -> 2\\n        vec2 zeroToTwo = zeroToOne * 2.0;\\n    \\n        // convert from 0 -> 2 to -1 -> +1 (clip space)\\n        vec2 clipSpace = zeroToTwo - 1.0;\\n\\n        gl_Position = vec4(clipSpace, 0.0, 1.0);\\n        // gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1); <- TO INVERT Y AXIS\\n    }\\n    \";\r\nexports.fragmentShader = \"\\n    precision mediump float;\\n\\n    varying vec3 v_fragColor;\\n\\n    void main()\\n    {\\n        gl_FragColor = vec4(v_fragColor, 1.0);\\n    }\\n    \";\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJnbC8uL3NyYy9zaGFkZXJzLnRzPzBmMDEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7R0FHRzs7O0FBRVUsb0JBQVksR0FBRyxnc0JBMEJ2QixDQUFDO0FBRU8sc0JBQWMsR0FBRyx3SkFTekIsQ0FBQyIsImZpbGUiOiIuL3NyYy9zaGFkZXJzLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBhdHRyaWJ1dGUgYXJlIGlucHV0c1xyXG4gKiBAdmFyeWluZyBhcmUgb3V0cHV0c1xyXG4gKi9cclxuXHJcbmV4cG9ydCBjb25zdCB2ZXJ0ZXhTaGFkZXIgPSBgXHJcbiAgICBwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcclxuXHJcbiAgICBhdHRyaWJ1dGUgdmVjMiBhX3ZlcnRleFBvc2l0aW9uO1xyXG4gICAgYXR0cmlidXRlIHZlYzMgYV92ZXJ0ZXhDb2xvcjtcclxuICAgIFxyXG4gICAgdW5pZm9ybSB2ZWMyIHVfcmVzb2x1dGlvbjtcclxuXHJcbiAgICB2YXJ5aW5nIHZlYzMgdl9mcmFnQ29sb3I7XHJcblxyXG4gICAgdm9pZCBtYWluKClcclxuICAgIHtcclxuICAgICAgICB2X2ZyYWdDb2xvciA9IGFfdmVydGV4Q29sb3I7XHJcblxyXG4gICAgICAgIC8vIGNvbnZlcnQgdGhlIHBvc2l0aW9uIGZyb20gcGl4ZWxzIHRvIDAuMCAtPiAxLjBcclxuICAgICAgICB2ZWMyIHplcm9Ub09uZSA9IGFfdmVydGV4UG9zaXRpb24gLyB1X3Jlc29sdXRpb247XHJcbiBcclxuICAgICAgICAvLyBjb252ZXJ0IGZyb20gMCAtPiAxIHRvIDAgLT4gMlxyXG4gICAgICAgIHZlYzIgemVyb1RvVHdvID0gemVyb1RvT25lICogMi4wO1xyXG4gICAgXHJcbiAgICAgICAgLy8gY29udmVydCBmcm9tIDAgLT4gMiB0byAtMSAtPiArMSAoY2xpcCBzcGFjZSlcclxuICAgICAgICB2ZWMyIGNsaXBTcGFjZSA9IHplcm9Ub1R3byAtIDEuMDtcclxuXHJcbiAgICAgICAgZ2xfUG9zaXRpb24gPSB2ZWM0KGNsaXBTcGFjZSwgMC4wLCAxLjApO1xyXG4gICAgICAgIC8vIGdsX1Bvc2l0aW9uID0gdmVjNChjbGlwU3BhY2UgKiB2ZWMyKDEsIC0xKSwgMCwgMSk7IDwtIFRPIElOVkVSVCBZIEFYSVNcclxuICAgIH1cclxuICAgIGA7XHJcblxyXG5leHBvcnQgY29uc3QgZnJhZ21lbnRTaGFkZXIgPSBgXHJcbiAgICBwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcclxuXHJcbiAgICB2YXJ5aW5nIHZlYzMgdl9mcmFnQ29sb3I7XHJcblxyXG4gICAgdm9pZCBtYWluKClcclxuICAgIHtcclxuICAgICAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KHZfZnJhZ0NvbG9yLCAxLjApO1xyXG4gICAgfVxyXG4gICAgYDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/shaders.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.ts");
/******/ 	
/******/ })()
;